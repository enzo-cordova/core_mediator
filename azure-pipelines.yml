trigger:
- develop
- release/*
- feature/*
- bugfix/*

pool:
  name: Default

variables:
  buildConfiguration: 'Release'

steps:
- task: gitversion/setup@0
  inputs:
    versionSpec: '5.10.0'
- task: gitversion/execute@0
  inputs:
    targetPath: '$(Build.SourcesDirectory)'
    useConfigFile: true
    configFilePath: 'GitVersion.yml'
- script: echo %Action%%BuildVersion%
  displayName: 'Set build version'
  env:
    Action: '##vso[build.updatebuildnumber]'
    BuildVersion: $(GitVersion.SemVer)
    versionSpec: '5.0.0'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: '- task: gitversion/execute@0
  inputs:
    targetPath: '**/*.csproj'
    updateAssemblyInfo: true
    updateAssemblyInfoFilename: '**''

- task: DotNetCoreCLI@2
  displayName: 'dotnet build $(buildConfiguration)'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test $(buildConfiguration)'
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish $(buildConfiguration)'
  inputs:
    command: 'publish'
    publishWebProjects: false
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: CopyPublishBuildArtifacts@1
  inputs:
    Contents: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    ArtifactType: Container
